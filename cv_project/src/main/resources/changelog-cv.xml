<?xml version="1.0" encoding="UTF-8" ?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd">

    <changeSet id="1" author="ivan">
        <sql>
            create database if not exists curriculum_vitaes;
        </sql>
    </changeSet>
    <changeSet id="2" author="ivan">
        <sql>
            create table if not exists T_GENDERS(
            GENDER_ID int not null auto_increment,
            F_GENDER_NAME varchar(10) not null unique,
            primary key(GENDER_ID)
            )charset=utf8;

            create table if not exists T_JOB_CANDIDATES(
            JOB_CANDIDATE_ID bigint(20) not null auto_increment,
            F_FIRST_NAME varchar(50) not null,
            F_LAST_NAME varchar(50) not null,
            F_PATRONYMIC varchar(50) not null,
            F_DATE_OF_BIRTH date not null,
            GENDER_ID int not null,
            primary key(JOB_CANDIDATE_ID),
            constraint FK_GENDER_IN_JOB_CANDIDATES foreign key (GENDER_ID)
            references T_GENDERS(GENDER_ID)
            ) charset=utf8;

            create table if not exists T_CONTACTS(
            CONTACT_ID bigint(20) not null auto_increment,
            F_CONTACT_NAME varchar(50) not null,
            JOB_CANDIDATE_ID bigint(20) not null,
            primary key(CONTACT_ID),
            constraint FK_JOB_CANDIDATE_IN_CONTACTS foreign key (JOB_CANDIDATE_ID)
            references T_JOB_CANDIDATES(JOB_CANDIDATE_ID)
            ) charset=utf8;

            create table if not exists T_TECHNOLOGIES(
            TECHNOLOGY_ID bigint(20) not null auto_increment,
            F_TECHNOLOGY_NAME varchar(50) not null,
            primary key(TECHNOLOGY_ID)
            ) charset=utf8;

            create table if not exists T_JOB_CANDIDATES_TECHNOLOGIES(
            JOB_CANDIDATE_ID bigint(20) not null,
            TECHNOLOGY_ID bigint(20) not null,
            primary key(JOB_CANDIDATE_ID, TECHNOLOGY_ID),
            constraint FK_JOB_CANDIDATE_IN_TECHNOLOGY_AND_JOB_CANDIDATES foreign key (JOB_CANDIDATE_ID)
            references T_JOB_CANDIDATES(JOB_CANDIDATE_ID),
            constraint FK_TECHNOLOGY_IN_TECHNOLOGY_AND_JOB_CANDIDATES foreign key (TECHNOLOGY_ID)
            references T_TECHNOLOGIES(TECHNOLOGY_ID)
            ) charset=utf8;
        </sql>
    </changeSet>
    <changeSet id="3" author="ivan">
        <sql>
            insert into T_GENDERS values (1, 'мужчина'), (2, 'женщина');

            insert into T_JOB_CANDIDATES values (1, 'Петр', 'Петров', 'Петрович', '1986-12-12', 1),
            (2, 'Иван', 'Иванов', 'Иванович', '1997-4-4', 1),
            (3, 'Морская', 'Мария', 'Васильевна', '1999-11-07', 2);

            insert into T_CONTACTS values (1, '+375(29)123-45-67', 1),
            (2, 'http://github.com/petya', 1),
            (3, 'petrovich@gmail.com', 1),
            (4, '+375(29)87-65-43', 2),
            (5, 'http://github.com/vanya', 2),
            (6, 'skype:ivanko', 2),
            (7, '+375(29)999-99-99', 3),
            (8, 'https://www.linkedin.com/in/mariya/', 3);

            insert into T_TECHNOLOGIES values (1, 'Git'),
            (2, 'Spring Boot'),
            (3, 'HTML'),
            (4, 'JavaEE'),
            (5, 'Java Core'),
            (6, 'Maven'),
            (7, 'REST'),
            (8, 'Spring');

            insert into T_job_candidates_technologies values (1, 1),(1, 2),(1, 3),
            (2, 1),(2, 4),(2, 5),
            (3, 6),(3, 7),(3, 8);
        </sql>
    </changeSet>

</databaseChangeLog>